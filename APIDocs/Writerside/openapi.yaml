openapi: 3.0.2
servers:
  - url: /api
info:
  description: |-
    Esta API proporciona un conjunto de endpoints para gestionar trabajadores y trabajos en una empresa.
    Permite realizar operaciones CRUD en las tablas de 'trabajador' y 'trabajo', así como otras funcionalidades
    para asignar, finalizar y consultar trabajos. Además, ofrece métodos para obtener información detallada sobre
    los trabajos realizados por los trabajadores, y facilita la administración de tareas pendientes y finalizadas.
  version: 1.0.0
  title: Gestión Hotelera Spring
  contact:
    email: liam.alejoasensi@gmail.com, karlos.riverog@gmail.com
  license:
    name: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication
    url: 'https://creativecommons.org/publicdomain/zero/1.0/'
tags:
  - name: trabajador
    description: Operaciones sobre los trabajadores
  - name: trabajo
    description: Operaciones sobre los trabajos
paths:
  /trabajadores:
    # Servicio GET para conseguir todos los trabajadores
    get:
      tags:
        - trabajador
      summary: Obtener listado de los trabajadores
      description: Obtener el listado completo de todos los trabajadores
      operationId: getAllTrabajadores
      responses:
        '200':
          description: Devolución del listado con los trabajadores
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Trabajador'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Error al realizar la consulta en la base de datos
        default:
          description: Error desconocido
    # Servicio POST para guardar un nuevo trabajador
    post:
      tags:
        - trabajador
      summary: Crear un trabajador
      description: Insertar un nuevo trabajador con datos válidos
      operationId: putTrabajador
      responses:
        '201':
          description: Trabajador creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  result:
                    $ref: '#/components/schemas/Trabajador'
        '400':
          description: Intento de creación con datos inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: El campo 'dni' no puede estar vacío
        '409':
          description: Conflicto con ID, DNI o correo
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: 'El trabajador con el DNI: 12345678 ya existe'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Error al realizar la inserción en la base de datos
        default:
          description: Error desconocido
      requestBody:
        description: El trabajador a insertar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trabajador'
  /trabajadores/{id}:
    # Servicio GET para conseguir los datos de un trabajador por ID
    get:
      tags:
        - trabajador
      summary: Obtener trabajador por ID
      description: Devuelve el detalle de un trabajador según su ID
      operationId: getTrabajadorById
      parameters:
        - in: path
          name: id
          required: true
          description: ID del trabajador
          schema:
            type: string
      responses:
        '200':
          description: Datos del trabajador devueltos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  result:
                    $ref: '#/components/schemas/Trabajador'
        '404':
          description: El trabajador no fue encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: 'El trabajador con el id: 3 no se ha encontrado'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Error al realizar la consulta en la base de datos
        default:
          description: Error desconocido
    # Servicio PUT para actualizar los datos de un trabajador
    put:
      summary: Actualiza un trabajador
      description: Busca un trabajador por ID y actualiza sus datos
      operationId: putTrabajador
      parameters:
        - in: path
          name: id
          required: true
          description: ID del trabajador
          schema:
            type: string
      requestBody:
        description: El trabajador a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trabajador'
      responses:
        '201':
          description: Trabajador actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  result:
                    $ref: '#/components/schemas/Trabajador'
        '400':
          description: Intento de actualización con datos inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: El campo 'dni' no puede estar vacío
        '404':
          description: El trabajador no fue encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: 'El trabajador con el id: 3 no se ha encontrado'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Error al actualizar el trabajador en la base de datos
        default:
          description: Error desconocido
    # Servicio DELETE para eliminar un trabajador según su ID
    delete:
      summary: Elimina un trabajador
      description: Busca un trabajador por ID y lo elimina de la BBDD
      operationId: deleteTrabajador
      parameters:
        - in: path
          name: id
          required: true
          description: ID del trabajador
          schema:
            type: string
      responses:
        '200':
          description: Trabajador eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  result:
                    type: string
                    example: Trabajador eliminado con éxito
        '404':
          description: El trabajador no fue encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: 'El trabajador con el id: 3 no se ha encontrado'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Error al eliminar el trabajador de la base de datos
        default:
          description: Error desconocido
  /trabajadores/{id}/{pass}/pendientes:
    get:
      tags:
        - trabajador
      summary: Obtener las tareas pendientes de un usuario
      description: |-
        Comprueba el id y la contraseña pasadas por parámetros contra la BBDD y devuelve los trabajos pendientes
        del trabajador con ese id en caso de que el id y la contraseña sean correctos.
      operationId: getPendientes
      parameters:
        - in: path
          name: id
          required: true
          description: ID del trabajador
          schema:
            type: string
        - in: path
          name: pass
          required: true
          description: Contraseña del trabajador
          schema:
            type: string
      responses:
        '200':
          description: Listado con los trabajos pendientes devueltos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Trabajo'
        '401':
          description: |-
            Login incorrecto en caso de que el ID no exista en la BBDD o, si existiera, en caso de que la contraseña
            no coincida. No se especifica.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Login o password incorrecto
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Error al eliminar el trabajador de la base de datos
        default:
          description: Error desconocido
  /trabajadores/{id}/{pass}/finalizados:
    get:
      tags:
        - trabajador
      summary: Obtener las tareas finalizados de un usuario
      description: |-
        Comprueba el id y la contraseña pasadas por parámetros contra la BBDD y devuelve los trabajos finalizados
        del trabajador con ese id en caso de que el id y la contraseña sean correctos.
      operationId: getPendientes
      parameters:
        - in: path
          name: id
          required: true
          description: ID del trabajador
          schema:
            type: string
        - in: path
          name: pass
          required: true
          description: Contraseña del trabajador
          schema:
            type: string
      responses:
        '200':
          description: Listado con los trabajos finalizados devueltos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Trabajo'
        '401':
          description: |-
            Login incorrecto en caso de que el ID no exista en la BBDD o, si existiera, en caso de que la contraseña
            no coincida. No se especifica.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Login o password incorrecto
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  errorMessage:
                    type: string
                    example: Error al eliminar el trabajador de la base de datos
        default:
          description: Error desconocido
components:
  schemas:
    Trabajador:
      properties:
        idTrabajador:
          type: string
          minLength: 1
          maxLength: 5
          description: |-
            Este campo almacena el ID del trabajador y actúa como su clave primaria. Debe ser una cadena que ocupe
            entre 1 y 5 caracteres.
          example: 2
        dni:
          type: string
          pattern: '^(?:[0-9]{8}[TRWAGMYFPDXBNJZSQVHLCKE]|[XYZ][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE])$'
          description: |-
            Almacena el DNI del trabajador. Debe ser un DNI válido (Ya sea NIE o NIF) y no puede encontrarse en otro
            trabajador.
          example: 12345678A
        nombre:
          type: string
          minLength: 2
          maxLength: 100
          description: |-
            Almacena el nombre del trabajador. Debe ser una cadena que ocupe entre 2 y 100 caracteres.
          example: Juan
        apellidos:
          type: string
          minLength: 2
          maxLength: 100
          description: |-
            Almacena los apellidos del trabajador. Debe ser una cadena que ocupe entre 2 y 100 caracteres.
          example: Bernal Iborra
        especialidad:
          $ref: '#/components/schemas/Especialidad'
        contraseña:
          type: string
          minLength: 4
          format: password
          description: |-
            Almacena la contraseña del trabajador de forma encriptada.
          example: pass1234
        email:
          type: string
          maxLength: 150
          format: email
          description: |-
            Almacena el email del trabajador. Puede ocupar como máximo 150 caracteres.
        trabajos:
          type: array
          description: |-
            Almacena un array con los trabajos hechos y por hacer del trabajador. Puede estar vacío.
          items:
            $ref: '#/components/schemas/Trabajo'
      type: object
    Trabajo:
      properties:
        codTrab:
          type: string
          example: T1
        categoria:
          $ref: '#/components/schemas/Especialidad'
        descripcion:
          type: string
          example: Limpieza de la habitación 102
        fecIni:
          type: string
          format: date
        fecFin:
          type: string
          format: date
          nullable: true
        tiempo:
          type: number
          format: float
          description: Horas empleadas en el trabajo
          nullable: true
          example: 1.5
        prioridad:
          type: int
          format: int32
          minimum: 1
          maximum: 4
          description: Importancia del trabajo (Del 1 al 4)
          example: 2
        idTrabajador:
          type: string
          description: ID del trabajador asociado al trabajo
          example: 2
      type: object
    Especialidad:
      type: string
      enum:
        - electricidad
        - limpieza
        - gestion
        - fontaneria
        - carpinteria
      example: limpieza
  requestBodies:
    Trabajador:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Trabajador'
      description: El trabajador que se quiere insertar/actualizar
    Trabajo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Trabajo'
      description: El trabajo que se quiere insertar/actualizar
